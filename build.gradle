buildscript {
  ext {
    kotlinVersion = "1.2.20"
    lombokVersion = "1.16.18"
    slf4jVersion = "1.7.25"
    junitJupiterVersion = "5.0.2"
    junitPlatformVersion = "1.0.2"

    mvnRepoDir = "$project.buildDir/mvn-repo"
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
  }
}

plugins {
  id "java"
}

allprojects {
  apply plugin: "base"
  apply plugin: "maven"
  apply plugin: "maven-publish"

  group "daggerok"
  version "0.0.1"

  defaultTasks("clean", "build")
}

subprojects {

  apply plugin: "kotlin"
  apply plugin: "org.junit.platform.gradle.plugin"

  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

  compileKotlin {
    kotlinOptions.jvmTarget = project.targetCompatibility
  }

  compileTestKotlin {
    kotlinOptions.jvmTarget = project.targetCompatibility
  }

  repositories {
    mavenCentral()
  }

  dependencies {

    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
    // @Slf4j
    compile("org.slf4j:slf4j-api:$slf4jVersion")
    compile("org.slf4j:jul-to-slf4j:$slf4jVersion")
    compile("org.slf4j:log4j-over-slf4j:$slf4jVersion")
    compile("ch.qos.logback:logback-classic:1.2.3")

    compileOnly("org.projectlombok:lombok:$lombokVersion")

    // junit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    // hamcrest asserts, like: assertThat
    testImplementation("org.hamcrest:hamcrest-core:1.3")

    testRuntime("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.3")
    // IDEA (older bundle):
    testRuntime("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")

    testCompileOnly("org.apiguardian:apiguardian-api:1.0.0")
    testCompileOnly("org.projectlombok:lombok:$lombokVersion")
  }

  publishing {
    repositories {
      maven {
        // change to point to your repo, e.g. http://my.org/repo
        url "$mvnRepoDir"
      }
    }
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
      }
    }
  }
}
